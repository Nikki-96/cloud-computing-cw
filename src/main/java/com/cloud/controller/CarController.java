/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.cloud.controller;

import com.cloud.model.Car;
import com.cloud.model.ModelApiResponse;
import com.cloud.model.Option;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@Api(value = "car", description = "the car API")
public interface CarController {

    @ApiOperation(value = "Find car by modelId", nickname = "getCarsByModelName", notes = "Returns list of car for modelName", response = Car.class, responseContainer = "List", authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "read:cars", description = "read your pets")
            })
    }, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Car.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid modelId supplied", response = ModelApiResponse.class),
        @ApiResponse(code = 404, message = "Car not found", response = ModelApiResponse.class) })
    @RequestMapping(value = "/car/model/{modelName}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Car>> getCarsByModelName(@ApiParam(value = "Name of model of car to return",required=true) @PathVariable("modelName") String modelName);


    @ApiOperation(value = "Find price by carID", nickname = "getOptionByCarID", notes = "Returns a price for carID", response = Option.class, responseContainer = "List", authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "read:cars", description = "read your pets")
            })
    }, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Option.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid modelId supplied", response = ModelApiResponse.class),
        @ApiResponse(code = 404, message = "Car not found", response = ModelApiResponse.class) })
    @RequestMapping(value = "/car/{carID}/option",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Option>> getOptionByCarID(@ApiParam(value = "ID of car price which needs to be return",required=true) @PathVariable("carID") Long carID);


    @ApiOperation(value = "Find price by carID", nickname = "getPriceByCarID", notes = "Returns a price for carID", response = Car.class, authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "read:cars", description = "read your pets")
            })
    }, tags={ "car", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Car.class),
        @ApiResponse(code = 400, message = "Invalid modelId supplied", response = ModelApiResponse.class),
        @ApiResponse(code = 404, message = "Car not found", response = ModelApiResponse.class) })
    @RequestMapping(value = "/car/{carID}/price",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Car> getPriceByCarID(@ApiParam(value = "ID of car price which needs to be return",required=true) @PathVariable("carID") Long carID);

}
